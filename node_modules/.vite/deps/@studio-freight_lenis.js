import {
  __commonJS,
  __toESM
} from "./chunk-DFKQJ226.js";

// node_modules/tiny-emitter/index.js
var require_tiny_emitter = __commonJS({
  "node_modules/tiny-emitter/index.js"(exports, module) {
    function E() {
    }
    E.prototype = {
      on: function(name, callback, ctx) {
        var e2 = this.e || (this.e = {});
        (e2[name] || (e2[name] = [])).push({
          fn: callback,
          ctx
        });
        return this;
      },
      once: function(name, callback, ctx) {
        var self2 = this;
        function listener() {
          self2.off(name, listener);
          callback.apply(ctx, arguments);
        }
        ;
        listener._ = callback;
        return this.on(name, listener, ctx);
      },
      emit: function(name) {
        var data = [].slice.call(arguments, 1);
        var evtArr = ((this.e || (this.e = {}))[name] || []).slice();
        var i2 = 0;
        var len = evtArr.length;
        for (i2; i2 < len; i2++) {
          evtArr[i2].fn.apply(evtArr[i2].ctx, data);
        }
        return this;
      },
      off: function(name, callback) {
        var e2 = this.e || (this.e = {});
        var evts = e2[name];
        var liveEvents = [];
        if (evts && callback) {
          for (var i2 = 0, len = evts.length; i2 < len; i2++) {
            if (evts[i2].fn !== callback && evts[i2].fn._ !== callback)
              liveEvents.push(evts[i2]);
          }
        }
        liveEvents.length ? e2[name] = liveEvents : delete e2[name];
        return this;
      }
    };
    module.exports = E;
    module.exports.TinyEmitter = E;
  }
});

// node_modules/virtual-scroll/lib/virtualscroll.js
var require_virtualscroll = __commonJS({
  "node_modules/virtual-scroll/lib/virtualscroll.js"(exports, module) {
    !function(e2, t2) {
      "object" == typeof exports && "undefined" != typeof module ? module.exports = t2() : "function" == typeof define && define.amd ? define(t2) : (e2 || self).virtualScroll = t2();
    }(exports, function() {
      var e2 = 0;
      function t2(t3) {
        return "__private_" + e2++ + "_" + t3;
      }
      function i2(e3, t3) {
        if (!Object.prototype.hasOwnProperty.call(e3, t3))
          throw new TypeError("attempted to use private field on non-instance");
        return e3;
      }
      function n2() {
      }
      n2.prototype = { on: function(e3, t3, i3) {
        var n3 = this.e || (this.e = {});
        return (n3[e3] || (n3[e3] = [])).push({ fn: t3, ctx: i3 }), this;
      }, once: function(e3, t3, i3) {
        var n3 = this;
        function o3() {
          n3.off(e3, o3), t3.apply(i3, arguments);
        }
        return o3._ = t3, this.on(e3, o3, i3);
      }, emit: function(e3) {
        for (var t3 = [].slice.call(arguments, 1), i3 = ((this.e || (this.e = {}))[e3] || []).slice(), n3 = 0, o3 = i3.length; n3 < o3; n3++)
          i3[n3].fn.apply(i3[n3].ctx, t3);
        return this;
      }, off: function(e3, t3) {
        var i3 = this.e || (this.e = {}), n3 = i3[e3], o3 = [];
        if (n3 && t3)
          for (var s3 = 0, h2 = n3.length; s3 < h2; s3++)
            n3[s3].fn !== t3 && n3[s3].fn._ !== t3 && o3.push(n3[s3]);
        return o3.length ? i3[e3] = o3 : delete i3[e3], this;
      } };
      var o2 = n2;
      o2.TinyEmitter = n2;
      var s2, h = "virtualscroll", r2 = t2("options"), a = t2("el"), l = t2("emitter"), u = t2("event"), c = t2("touchStart"), d = t2("bodyTouchAction");
      return function() {
        function e3(e4) {
          var t4 = this;
          Object.defineProperty(this, r2, { writable: true, value: void 0 }), Object.defineProperty(this, a, { writable: true, value: void 0 }), Object.defineProperty(this, l, { writable: true, value: void 0 }), Object.defineProperty(this, u, { writable: true, value: void 0 }), Object.defineProperty(this, c, { writable: true, value: void 0 }), Object.defineProperty(this, d, { writable: true, value: void 0 }), this._onWheel = function(e5) {
            var n3 = i2(t4, r2)[r2], o3 = i2(t4, u)[u];
            o3.deltaX = e5.wheelDeltaX || -1 * e5.deltaX, o3.deltaY = e5.wheelDeltaY || -1 * e5.deltaY, s2.isFirefox && 1 === e5.deltaMode && (o3.deltaX *= n3.firefoxMultiplier, o3.deltaY *= n3.firefoxMultiplier), o3.deltaX *= n3.mouseMultiplier, o3.deltaY *= n3.mouseMultiplier, t4._notify(e5);
          }, this._onMouseWheel = function(e5) {
            var n3 = i2(t4, u)[u];
            n3.deltaX = e5.wheelDeltaX ? e5.wheelDeltaX : 0, n3.deltaY = e5.wheelDeltaY ? e5.wheelDeltaY : e5.wheelDelta, t4._notify(e5);
          }, this._onTouchStart = function(e5) {
            var n3 = e5.targetTouches ? e5.targetTouches[0] : e5;
            i2(t4, c)[c].x = n3.pageX, i2(t4, c)[c].y = n3.pageY;
          }, this._onTouchMove = function(e5) {
            var n3 = i2(t4, r2)[r2];
            n3.preventTouch && !e5.target.classList.contains(n3.unpreventTouchClass) && e5.preventDefault();
            var o3 = i2(t4, u)[u], s3 = e5.targetTouches ? e5.targetTouches[0] : e5;
            o3.deltaX = (s3.pageX - i2(t4, c)[c].x) * n3.touchMultiplier, o3.deltaY = (s3.pageY - i2(t4, c)[c].y) * n3.touchMultiplier, i2(t4, c)[c].x = s3.pageX, i2(t4, c)[c].y = s3.pageY, t4._notify(e5);
          }, this._onKeyDown = function(e5) {
            var n3 = i2(t4, u)[u];
            n3.deltaX = n3.deltaY = 0;
            var o3 = window.innerHeight - 40;
            switch (e5.keyCode) {
              case 37:
              case 38:
                n3.deltaY = i2(t4, r2)[r2].keyStep;
                break;
              case 39:
              case 40:
                n3.deltaY = -i2(t4, r2)[r2].keyStep;
                break;
              case 32:
                n3.deltaY = o3 * (e5.shiftKey ? 1 : -1);
                break;
              default:
                return;
            }
            t4._notify(e5);
          }, i2(this, a)[a] = window, e4 && e4.el && (i2(this, a)[a] = e4.el, delete e4.el), s2 || (s2 = { hasWheelEvent: "onwheel" in document, hasMouseWheelEvent: "onmousewheel" in document, hasTouch: "ontouchstart" in document, hasTouchWin: navigator.msMaxTouchPoints && navigator.msMaxTouchPoints > 1, hasPointer: !!window.navigator.msPointerEnabled, hasKeyDown: "onkeydown" in document, isFirefox: navigator.userAgent.indexOf("Firefox") > -1 }), i2(this, r2)[r2] = Object.assign({ mouseMultiplier: 1, touchMultiplier: 2, firefoxMultiplier: 15, keyStep: 120, preventTouch: false, unpreventTouchClass: "vs-touchmove-allowed", useKeyboard: true, useTouch: true }, e4), i2(this, l)[l] = new o2(), i2(this, u)[u] = { y: 0, x: 0, deltaX: 0, deltaY: 0 }, i2(this, c)[c] = { x: null, y: null }, i2(this, d)[d] = null, void 0 !== i2(this, r2)[r2].passive && (this.listenerOptions = { passive: i2(this, r2)[r2].passive });
        }
        var t3 = e3.prototype;
        return t3._notify = function(e4) {
          var t4 = i2(this, u)[u];
          t4.x += t4.deltaX, t4.y += t4.deltaY, i2(this, l)[l].emit(h, { x: t4.x, y: t4.y, deltaX: t4.deltaX, deltaY: t4.deltaY, originalEvent: e4 });
        }, t3._bind = function() {
          s2.hasWheelEvent && i2(this, a)[a].addEventListener("wheel", this._onWheel, this.listenerOptions), s2.hasMouseWheelEvent && i2(this, a)[a].addEventListener("mousewheel", this._onMouseWheel, this.listenerOptions), s2.hasTouch && i2(this, r2)[r2].useTouch && (i2(this, a)[a].addEventListener("touchstart", this._onTouchStart, this.listenerOptions), i2(this, a)[a].addEventListener("touchmove", this._onTouchMove, this.listenerOptions)), s2.hasPointer && s2.hasTouchWin && (i2(this, d)[d] = document.body.style.msTouchAction, document.body.style.msTouchAction = "none", i2(this, a)[a].addEventListener("MSPointerDown", this._onTouchStart, true), i2(this, a)[a].addEventListener("MSPointerMove", this._onTouchMove, true)), s2.hasKeyDown && i2(this, r2)[r2].useKeyboard && document.addEventListener("keydown", this._onKeyDown);
        }, t3._unbind = function() {
          s2.hasWheelEvent && i2(this, a)[a].removeEventListener("wheel", this._onWheel), s2.hasMouseWheelEvent && i2(this, a)[a].removeEventListener("mousewheel", this._onMouseWheel), s2.hasTouch && (i2(this, a)[a].removeEventListener("touchstart", this._onTouchStart), i2(this, a)[a].removeEventListener("touchmove", this._onTouchMove)), s2.hasPointer && s2.hasTouchWin && (document.body.style.msTouchAction = i2(this, d)[d], i2(this, a)[a].removeEventListener("MSPointerDown", this._onTouchStart, true), i2(this, a)[a].removeEventListener("MSPointerMove", this._onTouchMove, true)), s2.hasKeyDown && i2(this, r2)[r2].useKeyboard && document.removeEventListener("keydown", this._onKeyDown);
        }, t3.on = function(e4, t4) {
          i2(this, l)[l].on(h, e4, t4);
          var n3 = i2(this, l)[l].e;
          n3 && n3[h] && 1 === n3[h].length && this._bind();
        }, t3.off = function(e4, t4) {
          i2(this, l)[l].off(h, e4, t4);
          var n3 = i2(this, l)[l].e;
          (!n3[h] || n3[h].length <= 0) && this._unbind();
        }, t3.destroy = function() {
          i2(this, l)[l].off(), this._unbind();
        }, e3;
      }();
    });
  }
});

// node_modules/@studio-freight/lenis/dist/lenis.modern.mjs
var import_tiny_emitter = __toESM(require_tiny_emitter(), 1);
var import_virtual_scroll = __toESM(require_virtualscroll(), 1);
function e() {
  return e = Object.assign ? Object.assign.bind() : function(t2) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var e2 = arguments[i2];
      for (var s2 in e2)
        Object.prototype.hasOwnProperty.call(e2, s2) && (t2[s2] = e2[s2]);
    }
    return t2;
  }, e.apply(this, arguments);
}
function s(t2, i2) {
  let e2 = t2 % i2;
  return (i2 > 0 && e2 < 0 || i2 < 0 && e2 > 0) && (e2 += i2), e2;
}
var r = ["duration", "easing"];
var o = class {
  to(t2, i2 = {}) {
    let { duration: s2 = 1, easing: o2 = (t3) => t3 } = i2, n2 = function(t3, i3) {
      if (null == t3)
        return {};
      var e2, s3, r2 = {}, o3 = Object.keys(t3);
      for (s3 = 0; s3 < o3.length; s3++)
        i3.indexOf(e2 = o3[s3]) >= 0 || (r2[e2] = t3[e2]);
      return r2;
    }(i2, r);
    this.target = t2, this.fromKeys = e({}, n2), this.toKeys = e({}, n2), this.keys = Object.keys(e({}, n2)), this.keys.forEach((i3) => {
      this.fromKeys[i3] = t2[i3];
    }), this.duration = s2, this.easing = o2, this.currentTime = 0, this.isRunning = true;
  }
  stop() {
    this.isRunning = false;
  }
  raf(t2) {
    if (!this.isRunning)
      return;
    this.currentTime = Math.min(this.currentTime + t2, this.duration);
    const i2 = this.progress >= 1 ? 1 : this.easing(this.progress);
    this.keys.forEach((t3) => {
      const e2 = this.fromKeys[t3];
      this.target[t3] = e2 + (this.toKeys[t3] - e2) * i2;
    }), 1 === i2 && this.stop();
  }
  get progress() {
    return this.currentTime / this.duration;
  }
};
var n = class extends import_tiny_emitter.TinyEmitter {
  constructor({ duration: t2 = 1.2, easing: e2 = (t3) => Math.min(1, 1.001 - Math.pow(2, -10 * t3)), smooth: s2 = true, mouseMultiplier: r2 = 1, smoothTouch: n2 = false, touchMultiplier: h = 2, direction: l = "vertical", gestureDirection: c = "vertical", infinite: a = false, wrapper: p = window, content: d = document.body } = {}) {
    var u, w, g;
    super(), this.onWindowResize = () => {
      this.wrapperWidth = window.innerWidth, this.wrapperHeight = window.innerHeight;
    }, this.onWrapperResize = ([t3]) => {
      if (t3) {
        const i2 = t3.contentRect;
        this.wrapperWidth = i2.width, this.wrapperHeight = i2.height;
      }
    }, this.onContentResize = ([t3]) => {
      if (t3) {
        const i2 = t3.contentRect;
        this.contentWidth = i2.width, this.contentHeight = i2.height;
      }
    }, this.onVirtualScroll = ({ deltaY: t3, deltaX: i2, originalEvent: e3 }) => {
      if ("vertical" === this.gestureDirection && 0 === t3 || "horizontal" === this.gestureDirection && 0 === i2)
        return;
      const s3 = !!e3.composedPath().find((t4) => t4.hasAttribute && t4.hasAttribute("data-lenis-prevent"));
      if (e3.ctrlKey || s3)
        return;
      if (this.smooth = e3.changedTouches ? this.smoothTouch : this.options.smooth, this.stopped)
        return void e3.preventDefault();
      if (!this.smooth)
        return;
      if (4 === e3.buttons)
        return;
      this.smooth && e3.preventDefault();
      let r3 = 0;
      r3 = "both" === this.gestureDirection ? i2 + t3 : "horizontal" === this.gestureDirection ? i2 : t3, this.targetScroll -= r3, this.scrollTo(this.targetScroll);
    }, this.onScroll = (t3) => {
      this.isScrolling && this.smooth || (this.targetScroll = this.scroll = this.lastScroll = this.wrapperNode[this.scrollProperty], this.notify());
    }, window.lenisVersion = "0.2.28", this.options = { duration: t2, easing: e2, smooth: s2, mouseMultiplier: r2, smoothTouch: n2, touchMultiplier: h, direction: l, gestureDirection: c, infinite: a, wrapper: p, content: d }, this.duration = t2, this.easing = e2, this.smooth = s2, this.mouseMultiplier = r2, this.smoothTouch = n2, this.touchMultiplier = h, this.direction = l, this.gestureDirection = c, this.infinite = a, this.wrapperNode = p, this.contentNode = d, this.wrapperNode.addEventListener("scroll", this.onScroll), this.wrapperNode === window ? (this.wrapperNode.addEventListener("resize", this.onWindowResize), this.onWindowResize()) : (this.wrapperHeight = this.wrapperNode.offsetHeight, this.wrapperWidth = this.wrapperNode.offsetWidth, this.wrapperObserver = new ResizeObserver(this.onWrapperResize), this.wrapperObserver.observe(this.wrapperNode)), this.contentHeight = this.contentNode.offsetHeight, this.contentWidth = this.contentNode.offsetWidth, this.contentObserver = new ResizeObserver(this.onContentResize), this.contentObserver.observe(this.contentNode), this.targetScroll = this.scroll = this.lastScroll = this.wrapperNode[this.scrollProperty], this.animate = new o();
    const f = (null == (u = navigator) || null == (w = u.userAgentData) ? void 0 : w.platform) || (null == (g = navigator) ? void 0 : g.platform) || "unknown";
    this.virtualScroll = new import_virtual_scroll.default({ el: this.wrapperNode, firefoxMultiplier: 50, mouseMultiplier: this.mouseMultiplier * (f.includes("Win") || f.includes("Linux") ? 0.84 : 0.4), touchMultiplier: this.touchMultiplier, passive: false, useKeyboard: false, useTouch: true }), this.virtualScroll.on(this.onVirtualScroll);
  }
  get scrollProperty() {
    let t2;
    return t2 = this.wrapperNode === window ? "horizontal" === this.direction ? "scrollX" : "scrollY" : "horizontal" === this.direction ? "scrollLeft" : "scrollTop", t2;
  }
  start() {
    let t2 = this.wrapperNode;
    this.wrapperNode === window && (t2 = document.documentElement), t2.classList.remove("lenis-stopped"), this.stopped = false;
  }
  stop() {
    let t2 = this.wrapperNode;
    this.wrapperNode === window && (t2 = document.documentElement), t2.classList.add("lenis-stopped"), this.stopped = true, this.animate.stop();
  }
  destroy() {
    var t2;
    this.wrapperNode === window && this.wrapperNode.removeEventListener("resize", this.onWindowResize), this.wrapperNode.removeEventListener("scroll", this.onScroll), this.virtualScroll.destroy(), null == (t2 = this.wrapperObserver) || t2.disconnect(), this.contentObserver.disconnect();
  }
  get limit() {
    return "horizontal" === this.direction ? this.contentWidth - this.wrapperWidth : this.contentHeight - this.wrapperHeight;
  }
  raf(t2) {
    const i2 = t2 - (this.now || 0);
    this.now = t2, !this.stopped && this.smooth && (this.lastScroll = this.scroll, this.animate.raf(1e-3 * i2), this.scroll === this.targetScroll && (this.lastScroll = this.scroll), this.isScrolling && (this.setScroll(this.scroll), this.notify()), this.isScrolling = this.scroll !== this.targetScroll);
  }
  get velocity() {
    return this.scroll - this.lastScroll;
  }
  setScroll(t2) {
    let i2 = this.infinite ? s(t2, this.limit) : t2;
    "horizontal" === this.direction ? this.wrapperNode.scrollTo(i2, 0) : this.wrapperNode.scrollTo(0, i2);
  }
  notify() {
    let t2 = this.infinite ? s(this.scroll, this.limit) : this.scroll;
    this.emit("scroll", { scroll: t2, limit: this.limit, velocity: this.velocity, direction: 0 === this.velocity ? 0 : this.velocity > 0 ? 1 : -1, progress: t2 / this.limit });
  }
  scrollTo(t2, { offset: i2 = 0, immediate: e2 = false, duration: s2 = this.duration, easing: r2 = this.easing } = {}) {
    if (null == t2 || this.stopped)
      return;
    let o2;
    if ("number" == typeof t2)
      o2 = t2;
    else if ("top" === t2 || "#top" === t2)
      o2 = 0;
    else if ("bottom" === t2)
      o2 = this.limit;
    else {
      let i3;
      if ("string" == typeof t2)
        i3 = document.querySelector(t2);
      else {
        if (null == t2 || !t2.nodeType)
          return;
        i3 = t2;
      }
      if (!i3)
        return;
      let e3 = 0;
      if (this.wrapperNode !== window) {
        const t3 = this.wrapperNode.getBoundingClientRect();
        e3 = "horizontal" === this.direction ? t3.left : t3.top;
      }
      const s3 = i3.getBoundingClientRect();
      o2 = ("horizontal" === this.direction ? s3.left : s3.top) + this.scroll - e3;
    }
    o2 += i2, this.targetScroll = this.infinite ? o2 : Math.max(0, Math.min(o2, this.limit)), !this.smooth || e2 ? (this.animate.stop(), this.scroll = this.lastScroll = this.targetScroll, this.setScroll(this.targetScroll)) : this.animate.to(this, { duration: s2, easing: r2, scroll: this.targetScroll });
  }
};
export {
  n as default
};
//# sourceMappingURL=@studio-freight_lenis.js.map
